{"ast":null,"code":"import { StatusCode } from \"../../models/enums/StatusCodeEnum\";\nimport { APIService } from \"../apiService\";\nexport class InquiryService extends APIService {\n  constructor(...args) {\n    super(...args);\n    this.sendInquiry = async inquiry => {\n      const url = `${this.getBaseUrl()}/inquiries`;\n      const response = await this.postData(url, inquiry);\n      if (response.status !== StatusCode.CREATED) {\n        await this.throwError(response);\n      }\n      return await response.json();\n    };\n  }\n}","map":{"version":3,"names":["StatusCode","APIService","InquiryService","constructor","args","sendInquiry","inquiry","url","getBaseUrl","response","postData","status","CREATED","throwError","json"],"sources":["/Users/firanolabdisa/Desktop/tuan/1/cs472-project/daily-diary-front/src/services/inquiry/inquiryService.ts"],"sourcesContent":["import { StatusCode } from \"../../models/enums/StatusCodeEnum\";\nimport { Inquiry } from \"../../models/Inquiry\";\nimport { APIService } from \"../apiService\";\n\nexport class InquiryService extends APIService {\n    sendInquiry = async (inquiry: Inquiry): Promise<Inquiry> => {\n        const url: string = `${this.getBaseUrl()}/inquiries`;\n        const response: Response = await this.postData(url, inquiry);\n\n        if (response.status !== StatusCode.CREATED) {\n            await this.throwError(response);\n        }\n\n        return await response.json();\n    };\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,mCAAmC;AAE9D,SAASC,UAAU,QAAQ,eAAe;AAE1C,OAAO,MAAMC,cAAc,SAASD,UAAU,CAAC;EAAAE,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC3CC,WAAW,GAAG,MAAOC,OAAgB,IAAuB;MACxD,MAAMC,GAAW,GAAG,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC,YAAY;MACpD,MAAMC,QAAkB,GAAG,MAAM,IAAI,CAACC,QAAQ,CAACH,GAAG,EAAED,OAAO,CAAC;MAE5D,IAAIG,QAAQ,CAACE,MAAM,KAAKX,UAAU,CAACY,OAAO,EAAE;QACxC,MAAM,IAAI,CAACC,UAAU,CAACJ,QAAQ,CAAC;MACnC;MAEA,OAAO,MAAMA,QAAQ,CAACK,IAAI,CAAC,CAAC;IAChC,CAAC;EAAA;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}